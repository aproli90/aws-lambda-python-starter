AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Role for Lambda Functions

Parameters:
  ProjectPrefix:
    Type: String
    Default: WFGClients
    Description: Prefix for all resources in this stack
  ProjectPrefixLower:
    Type: String
    Default: wfg-clients
    Description: Lowercase prefix for all resources in this stack

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: 
            Fn::Sub: "${ProjectPrefix}LambdaPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:GetProvisionedConcurrencyConfig
                  - lambda:PutProvisionedConcurrencyConfig
                  - lambda:DeleteProvisionedConcurrencyConfig
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:PublishVersion
                  - lambda:UpdateAlias
                  - lambda:GetAlias
                  - lambda:CreateAlias
                  - lambda:DeleteAlias
                  - lambda:ListAliases
                  - lambda:ListVersionsByFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - Fn::Sub: "arn:aws:s3:::${ProjectPrefixLower}*"
                  - Fn::Sub: "arn:aws:s3:::${ProjectPrefixLower}*/*"
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - Fn::Sub: "arn:aws:dynamodb:*:*:table/${ProjectPrefixLower}*"
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecrets
                Resource: 
                  - Fn::Sub: "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ProjectPrefixLower}*"
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                  - ses:GetIdentityVerificationAttributes
                  - ses:GetIdentityNotificationAttributes
                Resource: "*"

Outputs:
  LambdaExecutionRoleArn:
    Description: ARN of the Lambda execution role
    Value: 
      Fn::GetAtt: [LambdaExecutionRole, Arn]
    Export:
      Name: 
        Fn::Sub: "${ProjectPrefix}LambdaRoleArn"
